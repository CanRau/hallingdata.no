{"version":3,"sources":["webpack:///./src/components/BigImg.tsx","webpack:///./src/components/ChecklistCard.tsx","webpack:///./src/components/ChipGrid.tsx","webpack:///./src/components/InfoWithCard.tsx","webpack:///./src/pages/img/hero/code1-min.jpeg","webpack:///./src/pages/img/hero/dev1-min.jpeg","webpack:///./src/pages/systemutvikling.tsx"],"names":[],"mappings":"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","file":"component---src-pages-systemutvikling-tsx-c9584a4d84cfd9dbfa90.js","sourcesContent":["import * as React from \"react\"\nimport { StyleRulesCallback, withStyles } from \"material-ui/styles\"\nimport { Grid, Typography } from \"material-ui\"\n\nimport * as appleLogo from \"../img/apple-logo.png\"\nimport * as androidLogo from \"../img/android-logo.png\"\n\ntype Props = {\n  img: string\n}\n\nconst bigImg: React.SFC<Props> = ({ img }) => (\n  <div style={backgroundStyle(img)} />\n)\n\nconst backgroundStyle = (image: any) => {\n  return {\n    backgroundImage: `url(${image})`,\n    backgroundSize: \"cover\",\n    height: 600,\n  }\n}\n\nexport const BigImg = bigImg\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/BigImg.tsx","import {\n  Card,\n  CardContent,\n  Icon,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"material-ui\"\nimport { StyleRulesCallback, withStyles } from \"material-ui/styles\"\nimport { map } from \"ramda\"\nimport * as React from \"react\"\n\ntype Props = {\n  header?: string\n  list: Array<string>\n  icon?: string\n}\n\nconst checklistCard: React.SFC<Props & { classes: StyleClassNames }> = ({\n  header = \"\",\n  list,\n  icon = \"check_circle\",\n  classes,\n}) => {\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography type=\"body1\" className={classes.title}>\n          {header}\n        </Typography>\n        <List>\n          {map(\n            item => (\n              <ListItem key={item}>\n                <ListItemIcon>\n                  <Icon>{icon}</Icon>\n                </ListItemIcon>\n                <ListItemText primary={item} />\n              </ListItem>\n            ),\n            list\n          )}\n        </List>\n      </CardContent>\n    </Card>\n  )\n}\n\ntype StyleClassNames = {\n  card: string\n  title: string\n}\n\nconst styles: StyleRulesCallback = theme => ({\n  card: {\n    width: 300,\n    float: \"right\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: \"-100px\",\n    },\n    [theme.breakpoints.only(\"xs\")]: {\n      margin: \"auto\",\n      float: \"initial\"\n    },\n  },\n  title: {\n    marginBottom: 16,\n    fontSize: 14,\n    color: theme.palette.text.secondary,\n  },\n})\n\nexport const ChecklistCard = withStyles(styles)<Props>(checklistCard)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/ChecklistCard.tsx","import { PageSection } from \"./PageSection\"\nimport { Button, Grid, Typography, Chip } from \"material-ui\"\nimport { StyleRulesCallback, withStyles } from \"material-ui/styles\"\nimport * as React from \"react\"\nimport { map } from \"ramda\"\n\ntype Props = {\n  header: string\n  items: Array<string>\n}\n\nconst chipGrid: React.SFC<Props & { classes: StyleClassNames }> = ({\n  classes,\n  header,\n  items,\n}) => (\n  <PageSection header={header} className={classes.outer}>\n    <div className={classes.chipsGrid}>\n      {map(item => <Chip key={item} label={item} className={classes.chip} />, items)}\n    </div>\n  </PageSection>\n)\n\nconst backgroundStyle = (image: any) => {\n  return {\n    backgroundImage: `url(${image})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"bottom\",\n  }\n}\n\ntype StyleClassNames = {\n  outer: string\n  chip: string\n  header: string\n  chipsGrid: string\n}\n\nconst styles: StyleRulesCallback = theme => ({\n  outer: {\n    backgroundColor: \"#F9F7F3\",\n  },\n  chip: {\n    margin: theme.spacing.unit,\n  },\n  header: {\n    textAlign: \"center\",\n  },\n  chipsGrid: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    maxWidth: (theme as any).custom.pageMaxWith,\n    margin: \"auto\",\n  },\n})\n\nexport const ChipGrid = withStyles(styles)<Props>(chipGrid)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/ChipGrid.tsx","import { ChecklistCard } from './ChecklistCard';\nimport * as React from 'react';\nimport { StyleRulesCallback, withStyles } from \"material-ui/styles\"\nimport { Grid, Typography } from \"material-ui\"\n\ntype Props = {\n    htmlContent: string\n    checklistHeader?: string\n    checkListIcon?: string\n    checklistItems: Array<string>\n}\n\nconst infoWithCard: React.SFC<Props & { classes: StyleClassNames }> = ({\n  classes,\n  htmlContent,\n  checklistHeader,\n  checkListIcon,\n  checklistItems,\n}) => (\n  <Grid container justify=\"space-around\" className={classes.infoContainer}>\n    <Grid item sm={6} md={5} xs={10}>\n      <Typography\n        type=\"body1\"\n        gutterBottom\n        align=\"justify\"\n        className={classes.content}\n        dangerouslySetInnerHTML={{ __html: htmlContent }}\n      />\n    </Grid>\n    <Grid item sm={5} md={4} xs={10}>\n      <ChecklistCard\n        header={checklistHeader}\n        list={checklistItems}\n        icon={checkListIcon}\n      />\n    </Grid>\n  </Grid>\n)\n\ntype StyleClassNames = {\n  infoContainer: string\n  content: string\n}\n\nconst styles: StyleRulesCallback = theme => ({\n  infoContainer: {\n    maxWidth: (theme as any).custom.pageMaxWith,\n    margin: \"auto\",\n  },\n  content: {\n    fontSize: \"16px\" \n  }\n})\n\nexport const InfoWithCard = withStyles(styles)<Props>(infoWithCard)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/InfoWithCard.tsx","module.exports = __webpack_public_path__ + \"static/code1-min.3cad65f4.jpeg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/img/hero/code1-min.jpeg\n// module id = ./src/pages/img/hero/code1-min.jpeg\n// module chunks = 73428071966306","module.exports = __webpack_public_path__ + \"static/dev1-min.5cd8e229.jpeg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/img/hero/dev1-min.jpeg\n// module id = ./src/pages/img/hero/dev1-min.jpeg\n// module chunks = 73428071966306","import { Grid } from \"material-ui\"\nimport { StyleRulesCallback, withStyles } from \"material-ui/styles\"\nimport * as React from \"react\"\n\nimport { ChipGrid } from \"../components/ChipGrid\"\nimport { BigImg } from \"../components/BigImg\"\nimport { Hero } from \"../components/Hero\"\nimport { InfoWithCard } from \"../components/InfoWithCard\"\nimport { MobileLogoRow } from \"../components/MobileLogoRow\"\nimport { OurServices } from \"../components/OurServices\"\nimport * as heroImg from \"./img/hero/code1-min.jpeg\"\nimport * as bottomImg from \"./img/hero/dev1-min.jpeg\"\nimport * as style from \"./index.module.css\"\n\ntype Props = {\n  data: {\n    developmentPage: {\n      childMarkdownRemark: {\n        frontmatter: Frontmatter\n        html: any\n      }\n    }\n  }\n}\n\ntype Frontmatter = {\n  header: string\n  checklistHeader: string\n  checklist: Array<string>\n  technologiesHeader: string\n  technologies: Array<string>\n}\n\n// https://github.com/callemall/material-ui/issues/7466\nconst gridFix = {\n  width: \"100%\",\n  overflowX: \"hidden\" as any,\n}\n\nconst developmentPage: React.SFC<Props & { classes: StyleClassNames }> = ({\n  data,\n  classes,\n}) => {\n  const {\n    checklist,\n    header,\n    checklistHeader,\n    technologiesHeader,\n    technologies,\n  } = data.developmentPage.childMarkdownRemark.frontmatter\n  const html = data.developmentPage.childMarkdownRemark.html\n  return (\n    <div style={gridFix}>\n      <Hero header={header} type=\"small\" img={heroImg} imgPosition=\"center\" />\n      <InfoWithCard htmlContent={html} checklistItems={checklist} />\n      <ChipGrid header={technologiesHeader} items={technologies} />\n      <BigImg img={bottomImg} />\n    </div>\n  )\n}\n\ntype StyleClassNames = {}\n\nconst styles: StyleRulesCallback = theme => ({})\n\nexport default withStyles(styles)<Props>(developmentPage)\n\nexport const pageQuery = graphql`\n  query DevelopmentAppsContent {\n    developmentPage: file(relativePath: { eq: \"content/systemutvikling_page.md\" }) {\n      childMarkdownRemark {\n        html\n        frontmatter {\n          header\n          checklistHeader\n          checklist\n          technologiesHeader\n          technologies\n        }\n      }\n    }\n  }\n`\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/systemutvikling.tsx"],"sourceRoot":""}